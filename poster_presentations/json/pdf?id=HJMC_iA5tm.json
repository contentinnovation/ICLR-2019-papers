{
    "filename": "pdf.pdf",
    "metadata": {
        "title": "LEARNING A SAT SOLVER FROM SINGLE-BIT SUPER-",
        "author": "Daniel Selsam, Matthew Lamm, Benedikt Bunz, Percy Liang, David L. Dill Department of Computer Science Stanford University Stanford, CA 94305 {dselsam,mlamm,buenz,pliang,dill}@cs.stanford.edu",
        "date": 2019,
        "identifiers": {
            "url": "https://openreview.net/pdf?id=HJMC_iA5tm"
        },
        "abstract": "We present NeuroSAT, a message passing neural network that learns to solve SAT problems after only being trained as a classifier to predict satisfiability. Although it is not competitive with state-of-the-art SAT solvers, NeuroSAT can solve problems that are substantially larger and more difficult than it ever saw during training by simply running for more iterations. Moreover, NeuroSAT generalizes to novel distributions; after training only on random SAT problems, at test time it can solve SAT problems encoding graph coloring, clique detection, dominating set, and vertex cover problems, all on a range of distributions over small random graphs."
    },
    "keywords": [
        {
            "term": "satisfiability problem",
            "url": "https://en.wikipedia.org/wiki/satisfiability_problem"
        },
        {
            "term": "conjunctive normal form",
            "url": "https://en.wikipedia.org/wiki/conjunctive_normal_form"
        },
        {
            "term": "neural network",
            "url": "https://en.wikipedia.org/wiki/neural_network"
        },
        {
            "term": "formula",
            "url": "https://en.wikipedia.org/wiki/formula"
        }
    ],
    "abbreviations": {
        "SAT": "satisfiability problem",
        "MPNN": "message passing neural network",
        "CNF": "conjunctive normal form",
        "SP": "Survey Propagation"
    },
    "highlights": [
        "The propositional satisfiability problem (SAT) is one of the most fundamental problems of computer science. <a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\"><a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\">Cook (1971</a></a>) showed that the problem is NP-complete, which means that searching for any kind of efficiently-checkable certificate in any context can be reduced to finding a satisfying assignment of a propositional formula",
        "Our main motivation has been scientific: to better understand the extent to which neural networks are capable of precise, logical reasoning",
        "Our work has definitively established that neural networks can learn to perform discrete search on their own without the help of hard-coded search procedures, even after only end-to-end training with minimal supervision",
        "As we stressed early on, as an end-to-end satisfiability problem solver the trained NeuroSAT system discussed in this paper is still vastly less reliable than the state-of-the-art",
        "In a separate experiment omitted for space reasons, we trained our architecture to predict whether there is a satisfying assignment involving each individual literal in the problem and found that it was able to predict these bits with high accuracy as well",
        "We believe that architectures descended from NeuroSAT will be able to learn very different mechanisms and heuristics depending on the data they are trained on and the details of their objective functions"
    ],
    "key_statements": [
        "The propositional satisfiability problem (SAT) is one of the most fundamental problems of computer science. <a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\"><a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\">Cook (1971</a></a>) showed that the problem is NP-complete, which means that searching for any kind of efficiently-checkable certificate in any context can be reduced to finding a satisfying assignment of a propositional formula",
        "Search problems arising from a wide range of domains such as hardware and software verification, test pattern generation, planning, scheduling, and combinatorics are all routinely solved by constructing an appropriate satisfiability problem problem and calling a satisfiability problem solver (<a class=\"ref-link\" id=\"cGomes_et+al_2008_a\" href=\"#rGomes_et+al_2008_a\">Gomes et al, 2008</a>)",
        "We consider the question: can a neural network learn to solve satisfiability problem problems? To answer, we develop a novel message passing neural network (MPNN) (<a class=\"ref-link\" id=\"cScarselli_et+al_2009_a\" href=\"#rScarselli_et+al_2009_a\">Scarselli et al, 2009</a>; <a class=\"ref-link\" id=\"cLi_et+al_2015_a\" href=\"#rLi_et+al_2015_a\">Li et al, 2015</a>; <a class=\"ref-link\" id=\"cGilmer_et+al_2017_a\" href=\"#rGilmer_et+al_2017_a\">Gilmer et al, 2017</a>), NeuroSAT, and train it as a classifier to predict satisfiability on a dataset of random satisfiability problem problems",
        "We provide NeuroSAT with only a single bit of supervision for each satisfiability problem problem that indicates whether or not the problem is satisfiable",
        "When making a prediction about a new satisfiability problem problem, we find that NeuroSAT guesses unsatisfiable with low confidence until it finds a solution, at which point it converges and guesses satisfiable with very high confidence",
        "A satisfiability problem problem is a formula in conjunctive normal form, where the goal is to determine if the formula is satisfiable, and if so, to produce a satisfying assignment of truth values to variables",
        "Our main motivation has been scientific: to better understand the extent to which neural networks are capable of precise, logical reasoning",
        "Our work has definitively established that neural networks can learn to perform discrete search on their own without the help of hard-coded search procedures, even after only end-to-end training with minimal supervision",
        "We found this result surprising and think it constitutes an important contribution to the community\u2019s evolving understanding of the capabilities and limitations of neural networks",
        "Not our primary concern, we hope that our findings eventually lead to improvements in practical satisfiability problem solving",
        "As we stressed early on, as an end-to-end satisfiability problem solver the trained NeuroSAT system discussed in this paper is still vastly less reliable than the state-of-the-art",
        "A second approach might be to use a system like NeuroSAT to help guide decisions within a more traditional satisfiability problem solver, though it is not clear that NeuroSAT provides any useful information before it finds a satisfying assignment",
        "In a separate experiment omitted for space reasons, we trained our architecture to predict whether there is a satisfying assignment involving each individual literal in the problem and found that it was able to predict these bits with high accuracy as well",
        "We believe that architectures descended from NeuroSAT will be able to learn very different mechanisms and heuristics depending on the data they are trained on and the details of their objective functions",
        "We are cautiously optimistic that a descendant of NeuroSAT will one day lead to improvements to the state-of-the-art"
    ],
    "summary": [
        "The propositional satisfiability problem (SAT) is one of the most fundamental problems of computer science. <a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\"><a class=\"ref-link\" id=\"cCook_1971_a\" href=\"#rCook_1971_a\">Cook (1971</a></a>) showed that the problem is NP-complete, which means that searching for any kind of efficiently-checkable certificate in any context can be reduced to finding a satisfying assignment of a propositional formula.",
        "We develop a novel message passing neural network (MPNN) (<a class=\"ref-link\" id=\"cScarselli_et+al_2009_a\" href=\"#rScarselli_et+al_2009_a\">Scarselli et al, 2009</a>; <a class=\"ref-link\" id=\"cLi_et+al_2015_a\" href=\"#rLi_et+al_2015_a\">Li et al, 2015</a>; <a class=\"ref-link\" id=\"cGilmer_et+al_2017_a\" href=\"#rGilmer_et+al_2017_a\">Gilmer et al, 2017</a>), NeuroSAT, and train it as a classifier to predict satisfiability on a dataset of random SAT problems.",
        "When we train it on a different dataset in which every unsatisfiable problem contains a small contradiction, it learns to detect these contradictions instead of searching for satisfying assignments.",
        "Iteration \u2212\u2192 Figure 3: The sequence of literal votes L(\u22171) to L(\u221724) as NeuroSAT runs on a satisfiable problem from SR(20).",
        "To force our network to learn something substantive, we create a distribution SR(n) over pairs of random SAT problems on n variables with the following property: one element of the pair is satisfiable, the other is unsatisfiable, and the two differ by negating only a single literal occurrence in a single clause.",
        "Our ultimate goal is to solve SAT problems arising from a variety of domains, we begin by training NeuroSAT as a classifier to predict satisfiability on SR(40).",
        "Figure 3 illustrates the sequence of literal votes L(\u22171) to L\u2217(24) as NeuroSAT runs on a satisfiable problem from SR(20).",
        "Even though we only train NeuroSAT on SR(U(10, 40)), it is able to solve SAT problems sampled from SR(n) for n much larger than 40 by running for more iterations of message passing.",
        "When we train the same architecture on a dataset in which each unsatisfiable problem has a small subset of clauses that are already unsatisfiable, it learns to detect these unsat cores instead of searching for satisfying assignments.",
        "We can negate a literal in the final clause to get a satisfiable problem ps, and we can swap u for u in ps to get pu, which is unsatisfiable since it contains the unsat core u.",
        "There have been several recent papers showing that various neural network architectures can learn good heuristics for NP-hard combinatorial optimization problems (Vinyals et al, 2015; <a class=\"ref-link\" id=\"cBello_et+al_2016_a\" href=\"#rBello_et+al_2016_a\">Bello et al, 2016</a>; <a class=\"ref-link\" id=\"cDai_et+al_2017_a\" href=\"#rDai_et+al_2017_a\">Dai et al, 2017</a>); finding low-cost solutions to optimization problems requires less precise reasoning than finding satisfying assignments.",
        "In a separate experiment omitted for space reasons, we trained our architecture to predict whether there is a satisfying assignment involving each individual literal in the problem and found that it was able to predict these bits with high accuracy as well."
    ],
    "headline": "We present NeuroSAT, a message passing neural network that learns to solve satisfiability problem problems after only being trained as a classifier to predict satisfiability",
    "reference_links": [
        {
            "id": "Ba_et+al_2016_a",
            "entry": "Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint arXiv:1607.06450, 2016.",
            "arxiv_url": "https://arxiv.org/pdf/1607.06450"
        },
        {
            "id": "Bello_et+al_2016_a",
            "entry": "Irwan Bello, Hieu Pham, Quoc V Le, Mohammad Norouzi, and Samy Bengio. Neural combinatorial optimization with reinforcement learning. arXiv preprint arXiv:1611.09940, 2016.",
            "arxiv_url": "https://arxiv.org/pdf/1611.09940"
        },
        {
            "id": "Biere_et+al_2009_a",
            "entry": "Armin Biere, Marijn Heule, Hans van Maaren, and Toby Walsh. Conflict-driven clause learning sat solvers. Handbook of Satisfiability, Frontiers in Artificial Intelligence and Applications, pp. 131\u2013153, 2009.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Biere%2C%20Armin%20Heule%2C%20Marijn%20van%20Maaren%2C%20Hans%20Walsh%2C%20Toby%20Conflict-driven%20clause%20learning%20sat%20solvers%202009",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Biere%2C%20Armin%20Heule%2C%20Marijn%20van%20Maaren%2C%20Hans%20Walsh%2C%20Toby%20Conflict-driven%20clause%20learning%20sat%20solvers%202009"
        },
        {
            "id": "Braunstein_et+al_2005_a",
            "entry": "Alfredo Braunstein, Marc Mezard, and Riccardo Zecchina. Survey propagation: An algorithm for satisfiability. Random Structures & Algorithms, 27(2):201\u2013226, 2005.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Braunstein%2C%20Alfredo%20Mezard%2C%20Marc%20Zecchina%2C%20Riccardo%20Survey%20propagation%3A%20An%20algorithm%20for%20satisfiability%202005",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Braunstein%2C%20Alfredo%20Mezard%2C%20Marc%20Zecchina%2C%20Riccardo%20Survey%20propagation%3A%20An%20algorithm%20for%20satisfiability%202005"
        },
        {
            "id": "Cook_1971_a",
            "entry": "Stephen A Cook. The complexity of theorem-proving procedures. In Proceedings of the third annual ACM symposium on Theory of computing, pp. 151\u2013158. ACM, 1971.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Cook%2C%20Stephen%20A.%20The%20complexity%20of%20theorem-proving%20procedures%201971",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Cook%2C%20Stephen%20A.%20The%20complexity%20of%20theorem-proving%20procedures%201971"
        },
        {
            "id": "Dai_et+al_2017_a",
            "entry": "Hanjun Dai, Elias B Khalil, Yuyu Zhang, Bistra Dilkina, and Le Song. Learning combinatorial optimization algorithms over graphs. arXiv preprint arXiv:1704.01665, 2017.",
            "arxiv_url": "https://arxiv.org/pdf/1704.01665"
        },
        {
            "id": "Evans_et+al_2018_a",
            "entry": "Richard Evans, David Saxton, David Amos, Pushmeet Kohli, and Edward Grefenstette. Can neural networks understand logical entailment? arXiv preprint arXiv:1802.08535, 2018.",
            "arxiv_url": "https://arxiv.org/pdf/1802.08535"
        },
        {
            "id": "Flint_2012_a",
            "entry": "Alex Flint and Matthew Blaschko. Perceptron learning of sat. In Advances in Neural Information Processing Systems, pp. 2771\u20132779, 2012.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Flint%2C%20Alex%20Blaschko%2C%20Matthew%20Perceptron%20learning%20of%20sat%202012",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Flint%2C%20Alex%20Blaschko%2C%20Matthew%20Perceptron%20learning%20of%20sat%202012"
        },
        {
            "id": "Gilmer_et+al_2017_a",
            "entry": "Justin Gilmer, Samuel S Schoenholz, Patrick F Riley, Oriol Vinyals, and George E Dahl. Neural message passing for quantum chemistry. arXiv preprint arXiv:1704.01212, 2017.",
            "arxiv_url": "https://arxiv.org/pdf/1704.01212"
        },
        {
            "id": "Gomes_et+al_2008_a",
            "entry": "Carla P Gomes, Henry Kautz, Ashish Sabharwal, and Bart Selman. Satisfiability solvers. Foundations of Artificial Intelligence, 3:89\u2013134, 2008.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Gomes%2C%20Carla%20P.%20Kautz%2C%20Henry%20Sabharwal%2C%20Ashish%20Selman%2C%20Bart%20Satisfiability%20solvers%202008",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Gomes%2C%20Carla%20P.%20Kautz%2C%20Henry%20Sabharwal%2C%20Ashish%20Selman%2C%20Bart%20Satisfiability%20solvers%202008"
        },
        {
            "id": "Grozea_2014_a",
            "entry": "Cristian Grozea and Marius Popescu. Can machine learning learn a decision oracle for np problems? a test on sat. Fundamenta Informaticae, 131(3-4):441\u2013450, 2014.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Grozea%2C%20Cristian%20Popescu%2C%20Marius%20Can%20machine%20learning%20learn%20a%20decision%20oracle%20for%20np%20problems%3F%20a%20test%20on%20sat%202014",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Grozea%2C%20Cristian%20Popescu%2C%20Marius%20Can%20machine%20learning%20learn%20a%20decision%20oracle%20for%20np%20problems%3F%20a%20test%20on%20sat%202014"
        },
        {
            "id": "Haim_2009_a",
            "entry": "Shai Haim and Toby Walsh. Restart strategy selection using machine learning techniques. CoRR, abs/0907.5032, 2009.",
            "arxiv_url": "https://arxiv.org/pdf/0907.5032"
        },
        {
            "id": "Hochreiter_1997_a",
            "entry": "S. Hochreiter and J. Schmidhuber. Long short-term memory. Neural Computation, 9(8):1735\u20131780, 1997.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Hochreiter%2C%20S.%20Schmidhuber%2C%20J.%20Long%20short-term%20memory%201997",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Hochreiter%2C%20S.%20Schmidhuber%2C%20J.%20Long%20short-term%20memory%201997"
        },
        {
            "id": "Kingma_2014_a",
            "entry": "Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.",
            "arxiv_url": "https://arxiv.org/pdf/1412.6980"
        },
        {
            "id": "Knuth_2015_a",
            "entry": "Donald E Knuth. The art of computer programming, volume 4, fascicle 6: Satisfiability, 2015.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Knuth%2C%20Donald%20E.%20The%20art%20of%20computer%20programming%202015"
        },
        {
            "id": "Lewis_1983_a",
            "entry": "Harry R Lewis. Computers and intractability. a guide to the theory of np-completeness, 1983.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Lewis%2C%20Harry%20R.%20Computers%20and%20intractability.%20a%20guide%20to%20the%20theory%20of%20np-completeness%201983"
        },
        {
            "id": "Li_et+al_2015_a",
            "entry": "Yujia Li, Daniel Tarlow, Marc Brockschmidt, and Richard Zemel. Gated graph sequence neural networks. arXiv preprint arXiv:1511.05493, 2015.",
            "arxiv_url": "https://arxiv.org/pdf/1511.05493"
        },
        {
            "id": "Newman_2010_a",
            "entry": "Mark Newman. Networks: an introduction. Oxford university press, 2010.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Newman%2C%20Mark%20Networks%3A%20an%20introduction%202010"
        },
        {
            "id": "Palm_et+al_2017_a",
            "entry": "Rasmus Berg Palm, Ulrich Paquet, and Ole Winther. Recurrent relational networks for complex relational reasoning. arXiv preprint arXiv:1711.08028, 2017.",
            "arxiv_url": "https://arxiv.org/pdf/1711.08028"
        },
        {
            "id": "Pascanu_et+al_2012_a",
            "entry": "Razvan Pascanu, Tomas Mikolov, and Yoshua Bengio. Understanding the exploding gradient problem. CoRR, abs/1211.5063, 2012.",
            "arxiv_url": "https://arxiv.org/pdf/1211.5063"
        },
        {
            "id": "Scarselli_et+al_2009_a",
            "entry": "Franco Scarselli, Marco Gori, Ah Chung Tsoi, Markus Hagenbuchner, and Gabriele Monfardini. The graph neural network model. IEEE Transactions on Neural Networks, 20(1):61\u201380, 2009.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Scarselli%2C%20Franco%20Gori%2C%20Marco%20Tsoi%2C%20Ah%20Chung%20Hagenbuchner%2C%20Markus%20The%20graph%20neural%20network%20model%202009",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Scarselli%2C%20Franco%20Gori%2C%20Marco%20Tsoi%2C%20Ah%20Chung%20Hagenbuchner%2C%20Markus%20The%20graph%20neural%20network%20model%202009"
        },
        {
            "id": "Singh_et+al_2009_a",
            "entry": "Rishabh Singh, Joseph P Near, Vijay Ganesh, and Martin Rinard. Avatarsat: An auto-tuning boolean sat solver. 2009.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Singh%2C%20Rishabh%20Near%2C%20Joseph%20P.%20Ganesh%2C%20Vijay%20Rinard%2C%20Martin%20Avatarsat%3A%20An%20auto-tuning%20boolean%20sat%20solver%202009"
        },
        {
            "id": "Sorensson_2005_a",
            "entry": "Niklas Sorensson and Niklas Een. Minisat v1. 13-a sat solver with conflict-clause minimization. SAT, 2005(53):1\u20132, 2005.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Sorensson%2C%20Niklas%20Een%2C%20Niklas%20Minisat%20v1.%2013-a%20sat%20solver%20with%20conflict-clause%20minimization%202005",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Sorensson%2C%20Niklas%20Een%2C%20Niklas%20Minisat%20v1.%2013-a%20sat%20solver%20with%20conflict-clause%20minimization%202005"
        },
        {
            "id": "Published_1968_a",
            "entry": "Published as a conference paper at ICLR 2019 G Tseitin. On the complexity ofderivation in propositional calculus. Studies in Constrained Mathematics and Mathematical Logic, 1968.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Published%20as%20a%20conference%20paper%20at%20ICLR%202019%20G%20Tseitin%20On%20the%20complexity%20ofderivation%20in%20propositional%20calculus%20Studies%20in%20Constrained%20Mathematics%20and%20Mathematical%20Logic%201968",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Published%20as%20a%20conference%20paper%20at%20ICLR%202019%20G%20Tseitin%20On%20the%20complexity%20ofderivation%20in%20propositional%20calculus%20Studies%20in%20Constrained%20Mathematics%20and%20Mathematical%20Logic%201968"
        },
        {
            "id": "Processing_2015_a",
            "entry": "Processing Systems (NIPS), pp. 2674\u20132682, 2015.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Processing%20Systems%20NIPS%20pp%2026742682%202015",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Processing%20Systems%20NIPS%20pp%2026742682%202015"
        },
        {
            "id": "Xu_et+al_2008_a",
            "entry": "L. Xu, F. Hutter, H. H. Hoos, and K. Leyton-Brown. SATzilla: portfolio-based algorithm selection for SAT. Journal of Artificial Intelligence Research (JAIR), 32:565\u2013606, 2008.",
            "scholar_url": "https://scholar.google.co.uk/scholar?q=Xu%2C%20L.%20Hutter%2C%20F.%20Hoos%2C%20H.H.%20Leyton-Brown%2C%20K.%20SATzilla%3A%20portfolio-based%20algorithm%20selection%20for%20SAT%202008",
            "oa_query": "https://api.scholarcy.com/oa_version?query=Xu%2C%20L.%20Hutter%2C%20F.%20Hoos%2C%20H.H.%20Leyton-Brown%2C%20K.%20SATzilla%3A%20portfolio-based%20algorithm%20selection%20for%20SAT%202008"
        }
    ]
}
